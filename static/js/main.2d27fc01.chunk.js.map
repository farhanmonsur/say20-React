{"version":3,"sources":["components/Say20.js","components/Home.js","components/HowToPlay.js","components/ChooseDifficulty.js","components/ChooseTurn.js","components/Gameplay.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["difficulty","result","comment","Home","this","props","nextPage","prevPage","Fragment","showMenuIconButton","titleStyle","styles","AppTitle","title","label","onClick","Component","fontFamily","fontSize","HowToPlay","style","instructions","main","color","green500","ChooseDifficulty","easy","setDifficulty","hard","ChooseTurn","no","random_pc","Gameplay","button1","gameplay","button2","answer","Result","play","playAgain","pc","secondary","red500","user","trap","comments","Say20","state","page","setState","input","button","set_pc","endgame","Math","round","random","random_comment","floor","length","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d27fc01.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Home} from './Home'\r\nimport {HowToPlay} from './HowToPlay';\r\nimport {ChooseDifficulty} from './ChooseDifficulty';\r\nimport {ChooseTurn} from './ChooseTurn';\r\nimport {Gameplay} from './Gameplay';\r\nimport {Result} from './Result';\r\n\r\nvar user=0;\r\nvar pc=0;\r\nvar difficulty;\r\nvar trap='false';\r\nvar result;\r\nvar comment;\r\nvar comments=[\r\n    \"Go cry to momma!\",\r\n    \"Try tomorrow\",\r\n    \"Bad day?\",\r\n    \"Brains aren't everything. In your case they're nothing!\",\r\n    \"No I'm not insulting you, I'm describing you!\",\r\n    \"Roses are red, violets are blue, Faru made me genius, what happened to you?\",\r\n    \"You suck more than Justin Bieber with a Mic!\"];\r\n\r\nexport class Say20 extends Component {\r\n    state = {\r\n        page:1,\r\n        answer:0\r\n    };\r\n\r\n    nextPage = () => {\r\n        const { page } = this.state;\r\n        this.setState({\r\n          page: page + 1\r\n        });\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { page } = this.state;\r\n        this.setState({\r\n          page: page - 1\r\n        });\r\n    };\r\n\r\n    setDifficulty = (input) => {\r\n        difficulty=input;\r\n    };\r\n\r\n    gameplay = (button) => {\r\n        user=pc+button;\r\n        this.set_pc();\r\n        this.endgame();    \r\n        this.setState({answer:pc});\r\n    };\r\n\r\n    random_pc = () => {\r\n          const{page}=this.state;\r\n          pc= user+1+Math.round(Math.random());\r\n          if(page===3){\r\n            this.setState({answer:pc})\r\n          }\r\n    };\r\n\r\n    set_pc = () => {\r\n        if(difficulty==='e'){\r\n            this.random_pc();\r\n        }else{\r\n            if(pc===2){\r\n                trap='true';\r\n            }\r\n            if(trap==='false'){\r\n                if (user===2||user===5||user===8||user===11||user===14||user===17||user===20||user===0){\r\n                    this.random_pc();\r\n                }else {\r\n                    if (user===pc+2){\r\n                        pc=user+2;\r\n                        trap='true';\r\n                    } else {\r\n                        pc=user+1;\r\n                        trap='true';\r\n                    }\r\n                }\r\n            }else{\r\n                if(user===pc+1){\r\n                    pc=user+2;\r\n                }else{\r\n                    pc=user+1;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    endgame = () => {\r\n        if (user===19) {\r\n            pc= \"My Answer: 20\";\r\n            result= \"I WIN!!!\";\r\n            if(difficulty==='h'){\r\n                this.random_comment();\r\n            }\r\n            this.nextPage();\r\n        }\r\n        if (user===20) {\r\n            pc= \"\";\r\n            result= \"YOU WIN!!!\";\r\n            if(difficulty==='h'){\r\n                comment=\"Good Girl!\";\r\n            }else{\r\n                comment=\"Try Hard Mode!\";\r\n            }\r\n            this.nextPage();\r\n        }\r\n        if (user===21) {\r\n            pc= \"None said \\\"20\\\"\";\r\n            result= \"It's a Draw!!!\";\r\n            this.nextPage();\r\n        }\r\n        if(pc===20) {\r\n            pc= \"My Answer: 20\";\r\n            result= \"I WIN!!!\";\r\n            if(difficulty==='h'){\r\n                this.random_comment();\r\n            }\r\n            this.nextPage();\r\n        }\r\n    };\r\n\r\n    random_comment = () => {\r\n        comment=comments[Math.floor(Math.random()*comments.length)];\r\n    };\r\n\r\n    playAgain = () => {\r\n        this.setState({page: 1, answer: 0})\r\n        user=0;\r\n        pc=0;\r\n        trap='false';\r\n        result='';\r\n        comment='';\r\n    };\r\n\r\n    render() {\r\n        const {page, answer}=this.state;\r\n        // eslint-disable-next-line\r\n        switch(page){\r\n            case 0:\r\n                return(<HowToPlay\r\n                    nextPage={this.nextPage}\r\n                />);\r\n            case 1:\r\n                return(<Home\r\n                    nextPage={this.nextPage}\r\n                    prevPage={this.prevPage}\r\n                />);\r\n            case 2:\r\n                return(<ChooseDifficulty\r\n                    nextPage={this.nextPage}\r\n                    prevPage={this.prevPage}\r\n                    setDifficulty={this.setDifficulty}\r\n                />);\r\n            case 3:\r\n                return(<ChooseTurn\r\n                    nextPage={this.nextPage}\r\n                    prevPage={this.prevPage}\r\n                    random_pc={this.random_pc}\r\n                />);\r\n            case 4:\r\n                return(<Gameplay\r\n                    answer={answer}\r\n                    gameplay={this.gameplay}\r\n                />);\r\n            case 5:\r\n                return(<Result\r\n                    pc={pc}\r\n                    result={result}\r\n                    comment={comment}\r\n                    playAgain={this.playAgain}\r\n                />);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Say20","import React, { Component } from 'react'\r\nimport MuiThemeProvider  from 'material-ui/styles/MuiThemeProvider';\r\nimport  AppBar  from 'material-ui/AppBar';\r\nimport  RaisedButton  from 'material-ui/RaisedButton';\r\n\r\nexport class Home extends Component {\r\n    \r\n    render() {\r\n        const {nextPage, prevPage}=this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar showMenuIconButton={false} titleStyle={styles.AppTitle} title=\"Say20\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton \r\n                    label=\"How To Play?\"\r\n                    onClick={prevPage}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton label=\"Start Game\"\r\n                    onClick={nextPage}\r\n                    />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    AppTitle: {\r\n        fontFamily: 'Yellowtail',\r\n        fontSize: 32\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport  MuiThemeProvider  from 'material-ui/styles/MuiThemeProvider';\r\nimport  AppBar  from 'material-ui/AppBar';\r\nimport { RaisedButton } from 'material-ui';\r\nimport { green500 } from 'material-ui/styles/colors';\r\n\r\nexport class HowToPlay extends Component {\r\n\r\n    render() {\r\n        const{nextPage}=this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar showMenuIconButton={false} titleStyle={styles.AppTitle} title=\"Say20\"/>\r\n                    <br/>\r\n                    <h4>Here's how to play</h4>\r\n                    <br/>\r\n                    <div style={styles.instructions}>\r\n                    <label>One may count upto one or two  numbers per turn, and the numbers must be in counting order.\r\n                    </label>\r\n                    <br/>\r\n                    <label>One must start with the number after the last one that the other one said.\r\n                    </label>\r\n                    <br/>\r\n                    <label>For example, the first player can say '1' or '2'.\r\n                    </label>\r\n                    <br/>\r\n                    <label>If the first player says '2', then the second player could say '3' or '4' and so on.\r\n                    </label>\r\n                    <br/>\r\n                    <label style={styles.main}>The first one to say '20' will win the game.\r\n                    </label>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton \r\n                    label=\"Go Back\"\r\n                    onClick={nextPage}\r\n                    />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    AppTitle: {\r\n        fontFamily: 'Yellowtail',\r\n        fontSize: 32\r\n    },\r\n    instructions: {\r\n        fontSize: 20  \r\n    },\r\n    main: {\r\n        color: green500,\r\n        fontSize: 26\r\n    }\r\n}\r\n\r\nexport default HowToPlay\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider  from 'material-ui/styles/MuiThemeProvider';\r\nimport  AppBar  from 'material-ui/AppBar';\r\nimport  RaisedButton  from 'material-ui/RaisedButton';\r\n\r\nexport class ChooseDifficulty extends Component {\r\n    \r\n    easy = () => {\r\n        this.props.setDifficulty('e');  \r\n        this.props.nextPage();\r\n      };\r\n\r\n    hard = () => {\r\n        this.props.setDifficulty('h');    \r\n        this.props.nextPage();\r\n      };\r\n\r\n    render() {\r\n        const{prevPage}=this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar showMenuIconButton={false} titleStyle={styles.AppTitle} title=\"Say20\"/>\r\n                    <br/>\r\n                    <h4>Choose Difficulty</h4>\r\n                    <br/>\r\n                    <RaisedButton \r\n                    label=\"Easy\"\r\n                    onClick={this.easy}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton label=\"Hard\"\r\n                    onClick={this.hard}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton label=\"Go Back\"\r\n                    onClick={prevPage}\r\n                    />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\nconst styles={\r\n    AppTitle: {\r\n        fontFamily: 'Yellowtail',\r\n        fontSize: 32\r\n    }\r\n}\r\n\r\nexport default ChooseDifficulty\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider  from 'material-ui/styles/MuiThemeProvider';\r\nimport  AppBar  from 'material-ui/AppBar';\r\nimport  RaisedButton  from 'material-ui/RaisedButton';\r\n\r\nexport class ChooseTurn extends Component {\r\n    \r\n    no = () => {\r\n        this.props.random_pc();    \r\n        this.props.nextPage();\r\n    };\r\n\r\n    render() {\r\n        const{prevPage, nextPage}=this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar showMenuIconButton={false} titleStyle={styles.AppTitle} title=\"Say20\"/>\r\n                    <br/>\r\n                    <h4>Do you want to start?</h4>\r\n                    <br/>\r\n                    <RaisedButton \r\n                    label=\"Yes\"\r\n                    onClick={nextPage}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton label=\"No\"\r\n                    onClick={this.no}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton label=\"Go Back\"\r\n                    onClick={prevPage}\r\n                    />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles={\r\n    AppTitle: {\r\n        fontFamily: 'Yellowtail',\r\n        fontSize: 32\r\n    }\r\n}\r\n\r\nexport default ChooseTurn\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider  from 'material-ui/styles/MuiThemeProvider';\r\nimport  AppBar  from 'material-ui/AppBar';\r\nimport  RaisedButton  from 'material-ui/RaisedButton';\r\n\r\nexport class Gameplay extends Component {\r\n\r\n    button1 = () => {\r\n        this.props.gameplay(1);    \r\n    };\r\n    \r\n    button2 = () => {\r\n        this.props.gameplay(2);    \r\n    };\r\n    \r\n    render() {\r\n        const{answer}=this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar showMenuIconButton={false} titleStyle={styles.AppTitle} title=\"Say20\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <label style={styles.answer}>My answer: {answer}</label>\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton \r\n                    label={answer+1}\r\n                    onClick={this.button1}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton label={answer+2}\r\n                    onClick={this.button2}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    AppTitle: {\r\n        fontFamily: 'Yellowtail',\r\n        fontSize: 32\r\n    },\r\n    answer :{\r\n        fontSize: 20\r\n    }\r\n}\r\n\r\nexport default Gameplay","import React, { Component } from 'react'\r\nimport MuiThemeProvider  from 'material-ui/styles/MuiThemeProvider';\r\nimport  AppBar  from 'material-ui/AppBar';\r\nimport  RaisedButton  from 'material-ui/RaisedButton';\r\nimport { red500, green500 } from 'material-ui/styles/colors';\r\n\r\nexport class Result extends Component {\r\n\r\n    play = () => {\r\n        this.props.playAgain();    \r\n    };\r\n\r\n    render() {\r\n        const{pc, comment, result}=this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar showMenuIconButton={false} titleStyle={styles.AppTitle} title=\"Say20\"/>\r\n                    <br/>\r\n                    <label style={styles.comment}>{comment}</label>\r\n                    <br/>\r\n                    <label style={styles.answer}>{pc}</label>\r\n                    <br/>\r\n                    <br/>\r\n                    <label style={styles.result}>{result}</label>\r\n                    <br/>\r\n                    <br/>\r\n                    <RaisedButton \r\n                    label=\"Play Again\"\r\n                    secondary={true}\r\n                    onClick={this.play}\r\n                    /> \r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    AppTitle: {\r\n        fontFamily: 'Yellowtail',\r\n        fontSize: 32\r\n    },\r\n    comment:{\r\n        fontSize: 32,\r\n        color: red500\r\n    },\r\n    result:{\r\n        fontSize: 28,\r\n        color: green500\r\n    },\r\n    answer :{\r\n        fontSize: 20\r\n    }\r\n}\r\n\r\nexport default Result","import React, { Component } from 'react';\nimport './App.css';\nimport { Say20 } from './components/Say20';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Say20/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}